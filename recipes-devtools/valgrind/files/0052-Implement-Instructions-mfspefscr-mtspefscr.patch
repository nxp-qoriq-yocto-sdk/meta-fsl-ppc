From 80e06a8e22c21cf51fe0eab567ddf7941fc27716 Mon Sep 17 00:00:00 2001
From: Anmol P. Paralkar <anmol@freescale.com>
Date: Fri, 12 Apr 2013 18:08:56 -0700
Subject: [PATCH 52/65] Implement Instructions: { mfspefscr, mtspefscr }.

---
 FSL-SPE-README.txt                       |    4 +
 VEX/priv/guest_ppc_defs.h                |    4 +
 VEX/priv/guest_ppc_helpers.c             |   30 +++++++
 VEX/priv/guest_ppc_toIR.c                |   43 ++++++++++-
 memcheck/tests/ppc32/test_spe.c          |  132 ++++++++++++++++++++---------
 memcheck/tests/ppc32/test_spe.stderr.exp |    6 +-
 regtest-power7-64.default-build.log      |   20 ++---
 regtest-power7-64.log                    |   16 ++--
 8 files changed, 191 insertions(+), 64 deletions(-)

diff --git a/FSL-SPE-README.txt b/FSL-SPE-README.txt
index d6e779b..e5d2e27 100644
--- a/FSL-SPE-README.txt
+++ b/FSL-SPE-README.txt
@@ -73,6 +73,10 @@
  evmhegsmiaa, evmhegsmian, evmhegumiaa, evmhegumian,
  evmhogsmiaa, evmhogsmian, evmhogumiaa, evmhogumian,
 
+ New instructions implemented since last release:
+
+ mfspefscr, mtspefscr,
+
  Note: Synthetic instructions appear prefixed with a leading underscore in the
        above list. All synthetic instructions are tested as working under
        Valgrind even though, strictly speaking, such an instruction is not
diff --git a/VEX/priv/guest_ppc_defs.h b/VEX/priv/guest_ppc_defs.h
index 18837b1..217f73e 100644
--- a/VEX/priv/guest_ppc_defs.h
+++ b/VEX/priv/guest_ppc_defs.h
@@ -283,6 +283,10 @@ extern void spe_dirtyhelper_evmhogumian ( VexGuestPPC32State* gst,
                                           UInt rD_off,
                                           UInt rA_off,
                                           UInt rB_off);
+extern void spe_dirtyhelper_mfspefscr ( VexGuestPPC32State* gst,
+                                        UInt rD_off );
+extern void spe_dirtyhelper_mtspefscr ( VexGuestPPC32State* gst,
+                                        UInt rD_off );
 
 #endif /* ndef __VEX_GUEST_PPC_DEFS_H */
 
diff --git a/VEX/priv/guest_ppc_helpers.c b/VEX/priv/guest_ppc_helpers.c
index f62ac3e..6be07a5 100644
--- a/VEX/priv/guest_ppc_helpers.c
+++ b/VEX/priv/guest_ppc_helpers.c
@@ -1399,6 +1399,36 @@ void spe_dirtyhelper_evmhogumian ( VexGuestPPC32State* gst,
   return;
 }
 
+/* CALLED FROM GENERATED CODE */
+/* DIRTY HELPER (reads guest state, writes guest state) */
+void spe_dirtyhelper_mfspefscr ( VexGuestPPC32State* gst,
+                                 UInt rD_off )
+{
+#ifdef __SPE__
+  register uint32_t rD asm ("29") = 0x0;
+  vassert(rD_off  <= sizeof(VexGuestPPC32State) - 1 * sizeof(UInt));
+  asm volatile ("mfspefscr %[d]" : [d] "=r" (rD));
+  // Write rD to the Guest State:
+  *((UInt *) ((UChar *) gst + rD_off)) = rD;
+#endif // __SPE__
+  return;
+}
+
+/* CALLED FROM GENERATED CODE */
+/* DIRTY HELPER (reads guest state, writes guest state) */
+void spe_dirtyhelper_mtspefscr ( VexGuestPPC32State* gst,
+                                 UInt rD_off )
+{
+#ifdef __SPE__
+  register uint32_t rD asm ("29") = 0x0;
+  vassert(rD_off  <= sizeof(VexGuestPPC32State) - 1 * sizeof(UInt));
+  // Read rD from the Guest State:
+  rD = *((UInt *) ((UChar *) gst + rD_off));
+  asm volatile ("mtspefscr %[d]" : : [d] "r" (rD));
+#endif // __SPE__
+  return;
+}
+
 /*----------------------------------------------*/
 /*--- The exported fns ..                    ---*/
 /*----------------------------------------------*/
diff --git a/VEX/priv/guest_ppc_toIR.c b/VEX/priv/guest_ppc_toIR.c
index 0f137c2..b395826 100644
--- a/VEX/priv/guest_ppc_toIR.c
+++ b/VEX/priv/guest_ppc_toIR.c
@@ -6644,7 +6644,27 @@ static Bool dis_proc_ctl ( VexAbiInfo* vbi, UInt theInstr )
          DIP("mfspr r%u, SPRG3(readonly)\n", rD_addr);
          putIReg( rD_addr, getGST( PPC_GST_SPRG3_RO ) );
          break;
-
+#ifdef __SPE__
+      case 0x200: {
+         UInt rD_off   = integerGuestRegOffset ( rD_addr );
+         IRExpr** args = mkIRExprVec_1 ( mkU32( rD_off ) );
+         IRDirty* d    = unsafeIRDirty_0_N (0 /* regparms */,
+                                            "spe_dirtyhelper_mfspefscr",
+                                            &spe_dirtyhelper_mfspefscr,
+                                            args);
+         DIP("mfspefscr r%u\n", rD_addr);
+         d->needsBBP = True;
+         d->nFxState = 1;
+         vex_bzero(&d->fxState, sizeof(d->fxState));
+         d->fxState[0].fx     = Ifx_Write;
+         d->fxState[0].offset = rD_off;
+         d->fxState[0].size   = 1 * sizeof(UInt);
+
+         /* execute the dirty call, side-effecting guest state */
+         stmt( IRStmt_Dirty(d) );
+         break;
+      }
+#endif
       /* Even a lowly PPC7400 can run the associated helper, so no
          obvious need for feature testing at this point. */
       case 268 /* 0x10C */:
@@ -6779,6 +6799,27 @@ static Bool dis_proc_ctl ( VexAbiInfo* vbi, UInt theInstr )
          putGST( PPC_GST_VRSAVE, mkNarrowTo32(ty, mkexpr(rS)) );
          break;
          
+#ifdef __SPE__
+      case 0x200: {
+         UInt rD_off   = integerGuestRegOffset ( rD_addr );
+         IRExpr** args = mkIRExprVec_1 ( mkU32( rD_off ) );
+         IRDirty* d    = unsafeIRDirty_0_N (0 /* regparms */,
+                                            "spe_dirtyhelper_mtspefscr",
+                                            &spe_dirtyhelper_mtspefscr,
+                                            args);
+         DIP("mtspefscr r%u\n", rD_addr);
+         d->needsBBP = True;
+         d->nFxState = 1;
+         vex_bzero(&d->fxState, sizeof(d->fxState));
+         d->fxState[0].fx     = Ifx_Read;
+         d->fxState[0].offset = rD_off;
+         d->fxState[0].size   = 1 * sizeof(UInt);
+
+         /* execute the dirty call, side-effecting guest state */
+         stmt( IRStmt_Dirty(d) );
+         break;
+      }
+#endif
       default:
          vex_printf("dis_proc_ctl(ppc)(mtspr,SPR)(%u)\n", SPR);
          return False;
diff --git a/memcheck/tests/ppc32/test_spe.c b/memcheck/tests/ppc32/test_spe.c
index 4113103..b489fa8 100644
--- a/memcheck/tests/ppc32/test_spe.c
+++ b/memcheck/tests/ppc32/test_spe.c
@@ -4368,50 +4368,100 @@ __ev64_opaque__ __ev_set_u8( __ev64_opaque__ a, uint8_t b, uint32_t pos );
 __ev64_opaque__ __ev_set_s8( __ev64_opaque__ a, int8_t b, uint32_t pos );
 #endif
 
-#if TODO
-  // TODO: ADD examples here.
   // 4.2 Signal Processing Engine (SPE) APU Registers
   // 4.2.2 SPEFSCR Intrinsics
   // 4.2.2.1 SPEFSCR Low-Level Accessors
-uint32_t __ev_get_spefscr_sovh( );
-uint32_t __ev_get_spefscr_ovh( );
-uint32_t __ev_get_spefscr_fgh( );
-uint32_t __ev_get_spefscr_fxh( );
-uint32_t __ev_get_spefscr_finvh( );
-uint32_t __ev_get_spefscr_fdbzh( );
-uint32_t __ev_get_spefscr_funfh( );
-uint32_t __ev_get_spefscr_fovfh( );
-uint32_t __ev_get_spefscr_finxs(  );
-uint32_t __ev_get_spefscr_finvs(  );
-uint32_t __ev_get_spefscr_fdbzs(  );
-uint32_t __ev_get_spefscr_funfs(  );
-uint32_t __ev_get_spefscr_fovfs(  );
-uint32_t __ev_get_spefscr_mode( );
-uint32_t __ev_get_spefscr_sov( );
-uint32_t __ev_get_spefscr_ov( );
-uint32_t __ev_get_spefscr_fg( );
-uint32_t __ev_get_spefscr_fx( );
-uint32_t __ev_get_spefscr_finv( );
-uint32_t __ev_get_spefscr_fdbz( );
-uint32_t __ev_get_spefscr_funf( );
-uint32_t __ev_get_spefscr_fovf( );
-uint32_t __ev_get_spefscr_finxe( );
-uint32_t __ev_get_spefscr_finve( );
-uint32_t __ev_get_spefscr_fdbze( );
-uint32_t __ev_get_spefscr_funfe( );
-uint32_t __ev_get_spefscr_fovfe( );
-uint32_t __ev_get_spefscr_frmc( );
-void __ev_clr_spefscr_sovh( );
-void __ev_clr_spefscr_sov( );
-void __ev_clr_spefscr_finxs(  );
-void __ev_clr_spefscr_finvs(  );
-void __ev_clr_spefscr_fdbzs(  );
-void __ev_clr_spefscr_funfs(  );
-void __ev_clr_spefscr_fovfs(  );
-void __ev_set_spefscr_frmc( uint32_t rnd );
-                                 // rnd = 0 (nearest), rnd = 1 (zero),
-                                 //                                  // rnd = 2 (+inf), rnd = 3 (-inf)
-                                 //
+
+  // SPEFSCR get()'s
+  // All we are achieving by making these calls is verifying that these calls execute
+  // and that in particular, mfspefscr executes.
+  (void) __ev_get_spefscr_sovh();
+  (void) __ev_get_spefscr_ovh();
+  (void) __ev_get_spefscr_fgh();
+  (void) __ev_get_spefscr_fxh();
+  (void) __ev_get_spefscr_finvh();
+  (void) __ev_get_spefscr_fdbzh();
+  (void) __ev_get_spefscr_funfh();
+  (void) __ev_get_spefscr_fovfh();
+  (void) __ev_get_spefscr_finxs();
+  (void) __ev_get_spefscr_finvs();
+  (void) __ev_get_spefscr_fdbzs();
+  (void) __ev_get_spefscr_funfs();
+  (void) __ev_get_spefscr_fovfs();
+  (void) __ev_get_spefscr_mode();
+  (void) __ev_get_spefscr_sov();
+  (void) __ev_get_spefscr_ov();
+  (void) __ev_get_spefscr_fg();
+  (void) __ev_get_spefscr_fx();
+  (void) __ev_get_spefscr_finv();
+  (void) __ev_get_spefscr_fdbz();
+  (void) __ev_get_spefscr_funf();
+  (void) __ev_get_spefscr_fovf();
+  (void) __ev_get_spefscr_finxe();
+  (void) __ev_get_spefscr_finve();
+  (void) __ev_get_spefscr_fdbze();
+  (void) __ev_get_spefscr_funfe();
+  (void) __ev_get_spefscr_fovfe();
+  (void) __ev_get_spefscr_frmc();
+
+  // SPEFSCR clr()'s verify that mfspefscr/mtspefscr work (see spe.h)
+  __ev_clr_spefscr_sovh();
+  uint32_t spefscr_sovh = __ev_get_spefscr_sovh();
+  VERIFY(spefscr_sovh == 0x0);
+
+  __ev_clr_spefscr_sov();
+  uint32_t spefscr_sov = __ev_get_spefscr_sov();
+  VERIFY(spefscr_sov == 0x0);
+
+  __ev_clr_spefscr_finxs();
+  uint32_t spefscr_finxs = __ev_get_spefscr_finxs();
+  VERIFY(spefscr_finxs == 0x0);
+
+  __ev_clr_spefscr_finvs();
+  uint32_t spefscr_finvs = __ev_get_spefscr_finvs();
+  VERIFY(spefscr_finvs == 0x0);
+
+  __ev_clr_spefscr_fdbzs();
+  uint32_t spefscr_fdbzs = __ev_get_spefscr_fdbzs();
+  VERIFY(spefscr_fdbzs == 0x0);
+
+  __ev_clr_spefscr_funfs();
+  uint32_t spefscr_funfs = __ev_get_spefscr_funfs();
+  VERIFY(spefscr_funfs == 0x0);
+
+  __ev_clr_spefscr_fovfs();
+  uint32_t spefscr_fovfs = __ev_get_spefscr_fovfs();
+  VERIFY(spefscr_fovfs == 0x0);
+
+  // SPEFSCR set()'s verify that mfspefscr/mtspefscr work (see spe.h)
+  uint32_t spefscr_frmc;
+
+  // rnd = 0 (nearest)
+  __ev_set_spefscr_frmc(0x0);
+  spefscr_frmc = __ev_get_spefscr_frmc();
+  VERIFY(spefscr_frmc == 0x0);
+
+  // rnd = 1 (zero)
+  __ev_set_spefscr_frmc(0x1);
+  spefscr_frmc = __ev_get_spefscr_frmc();
+  VERIFY(spefscr_frmc == 0x1);
+
+  // rnd = 2 (+inf)
+  __ev_set_spefscr_frmc(0x2);
+  spefscr_frmc = __ev_get_spefscr_frmc();
+  VERIFY(spefscr_frmc == 0x2);
+
+  // rnd = 3 (-inf)
+  __ev_set_spefscr_frmc(0x3);
+  spefscr_frmc = __ev_get_spefscr_frmc();
+  VERIFY(spefscr_frmc == 0x3);
+
+  // Reset the FRMC field.
+  __ev_set_spefscr_frmc(0x0);
+  spefscr_frmc = __ev_get_spefscr_frmc();
+  VERIFY(spefscr_frmc == 0x0);
+
+#if TODO
 4.3      Application Binary Interface (ABI) Extensions
 The following sections discuss ABI extensions.
 4.3.1     malloc(), realloc(), calloc(), and new
diff --git a/memcheck/tests/ppc32/test_spe.stderr.exp b/memcheck/tests/ppc32/test_spe.stderr.exp
index ae31f29..f520e54 100644
--- a/memcheck/tests/ppc32/test_spe.stderr.exp
+++ b/memcheck/tests/ppc32/test_spe.stderr.exp
@@ -5,7 +5,7 @@ Invalid write of size 4
    by 0x........: run (test_spe.h:43)
    by 0x........: run (test_spe.h:49)
    by 0x........: run (test_spe.h:49)
-   by 0x........: main (test_spe.c:16584)
+   by 0x........: main (test_spe.c:16634)
  Address 0x........ is 0 bytes after a block of size 40 alloc'd
    at 0x........: malloc (vg_replace_malloc.c:...)
    by 0x........: vg_quick_start_guide_aux (test_spe.c:26)
@@ -13,7 +13,7 @@ Invalid write of size 4
    by 0x........: run (test_spe.h:43)
    by 0x........: run (test_spe.h:49)
    by 0x........: run (test_spe.h:49)
-   by 0x........: main (test_spe.c:16584)
+   by 0x........: main (test_spe.c:16634)
 
 
 HEAP SUMMARY:
@@ -27,7 +27,7 @@ HEAP SUMMARY:
    by 0x........: run (test_spe.h:43)
    by 0x........: run (test_spe.h:49)
    by 0x........: run (test_spe.h:49)
-   by 0x........: main (test_spe.c:16584)
+   by 0x........: main (test_spe.c:16634)
 
 LEAK SUMMARY:
    definitely lost: 40 bytes in 1 blocks
diff --git a/regtest-power7-64.default-build.log b/regtest-power7-64.default-build.log
index c94d8d7..461f22e 100644
--- a/regtest-power7-64.default-build.log
+++ b/regtest-power7-64.default-build.log
@@ -1158,7 +1158,7 @@ gcc -Winline -Wall -Wshadow -g -m32 -Winline -Wall -O -lm -g -mregnames -DHAS_DF
 make[5]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/none/tests/ppc32'
 make  check-local
 make[5]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/none/tests/ppc32'
-make[5]: Warning: File `.deps/xlc_dbl_u32.Po' has modification time 79 s in the future
+make[5]: Warning: File `.deps/xlc_dbl_u32.Po' has modification time 80 s in the future
 for f in ; do \
   if [ ! -e $f.dSYM  -o  $f -nt $f.dSYM ] ; then \
       echo "dsymutil $f"; \
@@ -1418,7 +1418,7 @@ gcc -Winline -Wall -Wshadow -g -m64 -Wno-long-long  -Wno-pointer-sign -fno-stack
 make[4]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/helgrind/tests'
 make  check-local
 make[4]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/helgrind/tests'
-make[4]: Warning: File `.deps/tc24_nonzero_sem.Po' has modification time 81 s in the future
+make[4]: Warning: File `.deps/tc24_nonzero_sem.Po' has modification time 82 s in the future
 for f in ; do \
   if [ ! -e $f.dSYM  -o  $f -nt $f.dSYM ] ; then \
       echo "dsymutil $f"; \
@@ -1775,7 +1775,6 @@ Making check in exp-dhat
 make[2]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/exp-dhat'
 Making check in .
 make[3]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/exp-dhat'
-make[3]: Warning: File `exp-dhat-ppc32-linux' has modification time 0.65 s in the future
 mkdir -p ../.in_place; \
 for f in exp-dhat-ppc64-linux exp-dhat-ppc32-linux vgpreload_exp-dhat-ppc64-linux.so vgpreload_exp-dhat-ppc32-linux.so ; do \
   rm -f ../.in_place/$f; \
@@ -1792,7 +1791,6 @@ for f in ; do \
   rm -f ../.in_place/$f.dSYM; \
   ln -f -s ../exp-dhat/$f.dSYM ../.in_place; \
 done
-make[3]: warning:  Clock skew detected.  Your build may be incomplete.
 make[3]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/exp-dhat'
 Making check in tests
 make[3]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/exp-dhat/tests'
@@ -1865,7 +1863,7 @@ gcc -Winline -Wall -Wshadow -g -O -m64 -Wno-shadow -Wno-inline -Wno-long-long  -
 make[3]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/perf'
 make  check-local
 make[3]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/perf'
-make[3]: Warning: File `.deps/tinycc-tinycc.Po' has modification time 81 s in the future
+make[3]: Warning: File `.deps/tinycc-tinycc.Po' has modification time 82 s in the future
 for f in ; do \
   if [ ! -e $f.dSYM  -o  $f -nt $f.dSYM ] ; then \
       echo "dsymutil $f"; \
@@ -1982,7 +1980,7 @@ badfree-2trace:  valgrind   --num-callers=2 -q ./badfree
 badfree:         valgrind   -q ./badfree 
 badfree3:        valgrind   -q --fullpath-after=/proj/ppc/DT/labhome/anmol/valgrind-3.8.1/ ./badfree 
 badjump:         valgrind   ./badjump 
-sh: line 1:  4940 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
+sh: line 1:  7110 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
 badjump2:        valgrind   -q ./badjump2 
 badloop:         valgrind   -q ./badloop 
 badpoll:         valgrind   -q ./badpoll 
@@ -1999,7 +1997,7 @@ clo_redzone_default: valgrind   --leak-check=no -q ./clo_redzone
 custom-overlap:  valgrind   --leak-check=summary -q ./custom-overlap 
 custom_alloc:    valgrind   -q ./custom_alloc 
 deep-backtrace:  valgrind   -q --num-callers=500 ./deep-backtrace 
-sh: line 1:  5499 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
+sh: line 1:  7669 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
 deep_templates:  valgrind   -q ./deep_templates 
 describe-block:  valgrind   ./describe-block 
 doublefree:      valgrind   -q ./doublefree 
@@ -2111,7 +2109,7 @@ supp-dir:        valgrind   --suppressions=x86/ ./../../tests/true
 supp1:           valgrind   --suppressions=supp.supp -q ./supp1 
 supp2:           valgrind   --suppressions=supp.supp -q ./supp2 
 supp_unknown:    valgrind   -q --suppressions=supp_unknown.supp ./badjump 
-sh: line 1: 10317 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
+sh: line 1: 12433 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
 *** supp_unknown failed (stderr) ***
 suppfree:        valgrind   --suppressions=suppfree.supp -q ./suppfree 
 test-plo-no:     valgrind   -q ./test-plo 
@@ -2248,7 +2246,7 @@ gxx304:          valgrind   ./gxx304
 ifunc:           (skipping, prereq failed: test -e ifunc)
 -- Running  tests in none/tests/linux ----------------------------------
 blockfault:      valgrind   ./blockfault 
-sh: line 1: 14955 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
+sh: line 1: 16942 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
 mremap:          valgrind   ./mremap 
 mremap2:         valgrind   ./mremap2 
 mremap3:         valgrind   ./mremap3 
@@ -2414,7 +2412,7 @@ tc20_verifywrap: valgrind   --read-var-info=yes ./tc20_verifywrap
 *** tc20_verifywrap failed (stderr) ***
 tc21_pthonce:    valgrind   --read-var-info=yes ./tc21_pthonce 
 tc22_exit_w_lock: valgrind   ./tc22_exit_w_lock 
-sh: line 1: 32393 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1:  2095 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   ./tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --hg-sanity-flags=111111 ./tc24_nonzero_sem 
 -- Finished tests in helgrind/tests ------------------------------------
@@ -2531,7 +2529,7 @@ tc18_semabuse:   valgrind   ./../../helgrind/tests/tc18_semabuse
 tc19_shadowmem:  valgrind   --error-limit=no --read-var-info=yes --show-confl-seg=no --num-callers=3 ./../../helgrind/tests/tc19_shadowmem 
 tc21_pthonce:    valgrind   --num-callers=3 ./../../helgrind/tests/tc21_pthonce 
 tc22_exit_w_lock: valgrind   --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock 
-sh: line 1:  5457 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1:  7450 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   --num-callers=3 ./../../helgrind/tests/tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --read-var-info=yes ./../../helgrind/tests/tc24_nonzero_sem 
 thread_name:     valgrind   --read-var-info=yes --check-stack-var=yes --num-callers=3 ./thread_name 
diff --git a/regtest-power7-64.log b/regtest-power7-64.log
index 1570041..ea0edc2 100644
--- a/regtest-power7-64.log
+++ b/regtest-power7-64.log
@@ -1418,7 +1418,7 @@ gcc -Winline -Wall -Wshadow -g -m64 -Wno-long-long  -Wno-pointer-sign -fno-stack
 make[4]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/helgrind/tests'
 make  check-local
 make[4]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/helgrind/tests'
-make[4]: Warning: File `.deps/tc24_nonzero_sem.Po' has modification time 81 s in the future
+make[4]: Warning: File `.deps/tc24_nonzero_sem.Po' has modification time 82 s in the future
 for f in ; do \
   if [ ! -e $f.dSYM  -o  $f -nt $f.dSYM ] ; then \
       echo "dsymutil $f"; \
@@ -1863,7 +1863,7 @@ gcc -Winline -Wall -Wshadow -g -O -m64 -Wno-shadow -Wno-inline -Wno-long-long  -
 make[3]: Leaving directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/perf'
 make  check-local
 make[3]: Entering directory `/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/perf'
-make[3]: Warning: File `.deps/tinycc-tinycc.Po' has modification time 81 s in the future
+make[3]: Warning: File `.deps/tinycc-tinycc.Po' has modification time 82 s in the future
 for f in ; do \
   if [ ! -e $f.dSYM  -o  $f -nt $f.dSYM ] ; then \
       echo "dsymutil $f"; \
@@ -1980,7 +1980,7 @@ badfree-2trace:  valgrind   --num-callers=2 -q ./badfree
 badfree:         valgrind   -q ./badfree 
 badfree3:        valgrind   -q --fullpath-after=/proj/ppc/DT/labhome/anmol/valgrind-3.8.1/ ./badfree 
 badjump:         valgrind   ./badjump 
-sh: line 1:  7572 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
+sh: line 1:  8454 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
 badjump2:        valgrind   -q ./badjump2 
 badloop:         valgrind   -q ./badloop 
 badpoll:         valgrind   -q ./badpoll 
@@ -1997,7 +1997,7 @@ clo_redzone_default: valgrind   --leak-check=no -q ./clo_redzone
 custom-overlap:  valgrind   --leak-check=summary -q ./custom-overlap 
 custom_alloc:    valgrind   -q ./custom_alloc 
 deep-backtrace:  valgrind   -q --num-callers=500 ./deep-backtrace 
-sh: line 1:  8146 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
+sh: line 1:  9018 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
 deep_templates:  valgrind   -q ./deep_templates 
 describe-block:  valgrind   ./describe-block 
 doublefree:      valgrind   -q ./doublefree 
@@ -2110,7 +2110,7 @@ supp-dir:        valgrind   --suppressions=x86/ ./../../tests/true
 supp1:           valgrind   --suppressions=supp.supp -q ./supp1 
 supp2:           valgrind   --suppressions=supp.supp -q ./supp2 
 supp_unknown:    valgrind   -q --suppressions=supp_unknown.supp ./badjump 
-sh: line 1: 12861 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
+sh: line 1: 15170 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
 *** supp_unknown failed (stderr) ***
 suppfree:        valgrind   --suppressions=suppfree.supp -q ./suppfree 
 test-plo-no:     valgrind   -q ./test-plo 
@@ -2246,7 +2246,7 @@ gxx304:          valgrind   ./gxx304
 ifunc:           (skipping, prereq failed: test -e ifunc)
 -- Running  tests in none/tests/linux ----------------------------------
 blockfault:      valgrind   ./blockfault 
-sh: line 1: 17359 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
+sh: line 1: 19728 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
 mremap:          valgrind   ./mremap 
 mremap2:         valgrind   ./mremap2 
 mremap3:         valgrind   ./mremap3 
@@ -2412,7 +2412,7 @@ tc20_verifywrap: valgrind   --read-var-info=yes ./tc20_verifywrap
 *** tc20_verifywrap failed (stderr) ***
 tc21_pthonce:    valgrind   --read-var-info=yes ./tc21_pthonce 
 tc22_exit_w_lock: valgrind   ./tc22_exit_w_lock 
-sh: line 1:  2523 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1:  4905 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   ./tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --hg-sanity-flags=111111 ./tc24_nonzero_sem 
 -- Finished tests in helgrind/tests ------------------------------------
@@ -2531,7 +2531,7 @@ tc18_semabuse:   valgrind   ./../../helgrind/tests/tc18_semabuse
 tc19_shadowmem:  valgrind   --error-limit=no --read-var-info=yes --show-confl-seg=no --num-callers=3 ./../../helgrind/tests/tc19_shadowmem 
 tc21_pthonce:    valgrind   --num-callers=3 ./../../helgrind/tests/tc21_pthonce 
 tc22_exit_w_lock: valgrind   --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock 
-sh: line 1:  8596 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1: 11233 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   --num-callers=3 ./../../helgrind/tests/tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --read-var-info=yes ./../../helgrind/tests/tc24_nonzero_sem 
 thread_name:     valgrind   --read-var-info=yes --check-stack-var=yes --num-callers=3 ./thread_name 
-- 
1.7.3.4

