From 3b4861ddc95bda8d0967c28ab0be6281419a4b83 Mon Sep 17 00:00:00 2001
From: Anmol P. Paralkar <anmol@freescale.com>
Date: Fri, 15 Feb 2013 13:04:06 -0800
Subject: [PATCH 25/65] Tests based on SPE Programming Interface Manual, Chapter 5: Programming Interface Examples.

---
 memcheck/tests/ppc32/test_spe.c          |  180 ++++++++++++++++++++++++++++++
 memcheck/tests/ppc32/test_spe.stderr.exp |    6 +-
 memcheck/tests/ppc32/test_spe.stdout.exp |    1 +
 regtest-power7-64.log                    |   12 +-
 4 files changed, 190 insertions(+), 9 deletions(-)

diff --git a/memcheck/tests/ppc32/test_spe.c b/memcheck/tests/ppc32/test_spe.c
index b1bfec7..fb3506d 100644
--- a/memcheck/tests/ppc32/test_spe.c
+++ b/memcheck/tests/ppc32/test_spe.c
@@ -4016,6 +4016,185 @@ int chapter2_spe2pim(void)
 }
 TEST_SPE_DECL(chapter2_spe2pim, "Chapter 2: High-Level Language Interface");
 
+int chapter5_spe2pim(void)
+{
+  int failures = 0;
+#ifdef __SPE__
+
+  /* Ref. SPE2PIM:Chapter 5
+   * Programming Interface Examples
+   */
+
+  // 5.1.1 __ev64_opaque__ Initialization
+  __ev64_opaque__ v0 = (__ev64_u32__) { 0, 1 };
+  VERIFY(v0[0] == 0 && v0[1] == 1);
+
+  __ev64_opaque__ v1 = (__ev64_opaque__)(__ev64_u32__) { 0, 1 };
+  VERIFY(v1[0] == 0 && v1[1] == 1);
+
+  __ev64_opaque__ v2 = (__ev64_u16__) (__ev64_opaque__) (__ev64_u32__) { 0, 1 };
+  VERIFY(v2[0] == 0 && v2[1] == 1);
+
+  __ev64_opaque__ v3 = (__ev64_opaque__) (__ev64_u16__) (__ev64_u32__) { 0, 1 };
+  VERIFY(v3[0] == 0 && v3[1] == 1);
+
+  __ev64_opaque__ v4 = (__ev64_u16__) (__ev64_u32__) { 0, 1 };
+  VERIFY(v4[0] == 0 && v4[1] == 1);
+
+#if 0
+  // Not sure why we get these:
+  // test_spe.c:4016:3: warning: index value is out of bound [-Warray-bounds]
+  // test_spe.c:4016:3: warning: index value is out of bound [-Warray-bounds]
+  __ev64_opaque__ v5 = (__ev64_u16__) { 0, 1, 2, 3 };
+  VERIFY(v5[0] == 0 && v5[1] == 1 && v5[2] == 2 && v5[3] == 3);
+#endif
+
+  // 5.1.2 Array Initialization of SPE2 Data Types
+  __ev64_u32__ x1[4] = {
+    { 0, 1 },
+    { 2, 3 },
+    { 4, 5 },
+    { 6, 7 }
+  };
+  VERIFY(x1[0][0] == 0 && x1[0][1] == 1);
+  VERIFY(x1[1][0] == 2 && x1[1][1] == 3);
+  VERIFY(x1[2][0] == 4 && x1[2][1] == 5);
+  VERIFY(x1[3][0] == 6 && x1[3][1] == 7);
+
+  __ev64_u16__ x2[4] = {
+    {  0,  1,  2,  3 },
+    {  4,  5,  6,  7 },
+    {  8,  9, 10, 11 },
+    { 12, 13, 14, 15 },
+  };
+  VERIFY(x2[0][0] ==  0 && x2[0][1] ==  1 && x2[0][2] ==  2 && x2[0][3] ==  3);
+  VERIFY(x2[1][0] ==  4 && x2[1][1] ==  5 && x2[1][2] ==  6 && x2[1][3] ==  7);
+  VERIFY(x2[2][0] ==  8 && x2[2][1] ==  9 && x2[2][2] == 10 && x2[2][3] == 11);
+  VERIFY(x2[3][0] == 12 && x2[3][1] == 13 && x2[3][2] == 14 && x2[3][3] == 15);
+
+#if __ADDED_FP_SUPPORT__
+  __ev64_fs__ x3[4] = {
+    {  1.1f,  2.2f },
+    { -3.3f,  4.4f },
+    {  5.5f,  6.6f },
+    {  7.7f, -8.8f }
+  };
+#endif
+
+  __ev64_u32__ x4[4] = {
+    (__ev64_u32__) { 0, 1 },
+    (__ev64_u32__) { 2, 3 },
+    (__ev64_u32__) { 4, 5 },
+    (__ev64_u32__) { 6, 7 }
+  };
+  VERIFY(x4[0][0] == 0 && x4[0][1] == 1);
+  VERIFY(x4[1][0] == 2 && x4[1][1] == 3);
+  VERIFY(x4[2][0] == 4 && x4[2][1] == 5);
+  VERIFY(x4[3][0] == 6 && x4[3][1] == 7);
+
+#if 0
+  __ev64_u32__ x5[ /*4*/ 5 ] = {
+    (__ev64_u32__) { 0, 1 },
+    // GCC (4.6.2(, does not like this:
+    // (__ev64_u16__) { 2, 3, 4, 5},
+    // We get:
+    // test_spe.c:4051:5: error: incompatible types when initializing type
+    // 'unsigned int' using type '__ev64_u16__'
+    (__ev64_u32__) { 2, 3 }, // Rewritten
+    (__ev64_u32__) { 4, 5 }, // Rewritten
+    (__ev64_u32__) { 6, 7 },
+    (__ev64_u32__) { 8, 9 }
+  };
+#endif
+
+  // 5.2 Fixed-Point Accessors
+#if __ADDED_FP_SUPPORT__
+  // TODO: ADD examples here.
+#endif
+
+  // 5.3 Loads
+  __ev64_u32__ tab[] = {
+    (__ev64_u32__) { 0x0cc20304, 0xd5060708 },
+    (__ev64_u32__) { 0x090a0b0c, 0xbd020f10 },
+    (__ev64_u32__) { 0xb11b1314, 0x1b161718 },
+    (__ev64_u32__) { 0x19ccfb1c, 0xbdbe4f20 },
+    (__ev64_u32__) { 0xcd7c7b7c, 0x7d7e7f80 },
+    (__ev64_u32__) { 0x8d8c8384, 0x85868788 },
+    (__ev64_u32__) { 0x89fa8b8c, 0xbd8e8f90 },
+    (__ev64_u32__) { 0x9192f3a4, 0x95969798 }
+  };
+
+
+  // 5.3.1 __ev_lddx
+  __ev64_u32__ vec0;
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 0*8);
+  VERIFY(memcmp (&vec0, &tab[0], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 1*8);
+  VERIFY(memcmp (&vec0, &tab[1], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 2*8);
+  VERIFY(memcmp (&vec0, &tab[2], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 3*8);
+  VERIFY(memcmp (&vec0, &tab[3], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 4*8);
+  VERIFY(memcmp (&vec0, &tab[4], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 5*8);
+  VERIFY(memcmp (&vec0, &tab[5], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 6*8);
+  VERIFY(memcmp (&vec0, &tab[6], sizeof(__ev64_u32__)) == 0);
+
+  vec0 = __ev_lddx((__ev64_opaque__ *)(&tab[0]), 7*8);
+  VERIFY(memcmp (&vec0, &tab[7], sizeof(__ev64_u32__)) == 0);
+
+  // 5.3.2 __ev_ldd
+  __ev64_u32__ vec1;
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 0);
+  VERIFY(memcmp (&vec1, &tab[0], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 1);
+  VERIFY(memcmp (&vec1, &tab[1], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 2);
+  VERIFY(memcmp (&vec1, &tab[2], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 3);
+  VERIFY(memcmp (&vec1, &tab[3], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 4);
+  VERIFY(memcmp (&vec1, &tab[4], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 5);
+  VERIFY(memcmp (&vec1, &tab[5], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 6);
+  VERIFY(memcmp (&vec1, &tab[6], sizeof(__ev64_u32__)) == 0);
+
+  vec1 = __ev_ldd((__ev64_opaque__ *)(&tab[0]), 7);
+  VERIFY(memcmp (&vec1, &tab[7], sizeof(__ev64_u32__)) == 0);
+
+#if 0
+  // 5.3.4 __ev_lhhesplat
+  // test_spe.c:4154:3: warning: passing argument 1 of '__builtin_spe_evlhhesplat'
+  //                    from incompatible pointer type [enabled by default]
+  // test_spe.c:4154:3: note: expected 'short unsigned int *' but argument is of
+  //                    type '__vector(2) int *'
+  __ev64_u32__ vec2 = __ev_lhhesplat((__ev64_opaque__ *)(&tab[0]), 4);
+  __ev64_u32__ vec3 = (__ev64_u32__) { 0x090a0000, 0x090a0000 };
+  VERIFY(memcmp (&vec2, &vec3, sizeof (__ev64_u32__)) == 0);
+#endif
+
+#endif // __SPE__
+  return failures;
+}
+TEST_SPE_DECL(chapter5_spe2pim, "Chapter 5: Programming Interface Examples");
+
 /* NOTE: To avoid having to remaster the .exp files entirely, add
  *       new test functions /just above/ this comment.
  *       That way, you only need to worry about the test that you
@@ -4190,6 +4369,7 @@ test_t spe2pim_tests_table = {
   .description = "SPE2PIM Tests",
   .table = {
     F(chapter2_spe2pim),
+    F(chapter5_spe2pim),
     NULL
   }
 };
diff --git a/memcheck/tests/ppc32/test_spe.stderr.exp b/memcheck/tests/ppc32/test_spe.stderr.exp
index 7a13532..40fa966 100644
--- a/memcheck/tests/ppc32/test_spe.stderr.exp
+++ b/memcheck/tests/ppc32/test_spe.stderr.exp
@@ -5,7 +5,7 @@ Invalid write of size 4
    by 0x........: run (test_spe.h:42)
    by 0x........: run (test_spe.h:48)
    by 0x........: run (test_spe.h:48)
-   by 0x........: main (test_spe.c:4238)
+   by 0x........: main (test_spe.c:4418)
  Address 0x........ is 0 bytes after a block of size 40 alloc'd
    at 0x........: malloc (vg_replace_malloc.c:...)
    by 0x........: vg_quick_start_guide_aux (test_spe.c:26)
@@ -13,7 +13,7 @@ Invalid write of size 4
    by 0x........: run (test_spe.h:42)
    by 0x........: run (test_spe.h:48)
    by 0x........: run (test_spe.h:48)
-   by 0x........: main (test_spe.c:4238)
+   by 0x........: main (test_spe.c:4418)
 
 
 HEAP SUMMARY:
@@ -27,7 +27,7 @@ HEAP SUMMARY:
    by 0x........: run (test_spe.h:42)
    by 0x........: run (test_spe.h:48)
    by 0x........: run (test_spe.h:48)
-   by 0x........: main (test_spe.c:4238)
+   by 0x........: main (test_spe.c:4418)
 
 LEAK SUMMARY:
    definitely lost: 40 bytes in 1 blocks
diff --git a/memcheck/tests/ppc32/test_spe.stdout.exp b/memcheck/tests/ppc32/test_spe.stdout.exp
index 2c8e686..d4ff5c8 100644
--- a/memcheck/tests/ppc32/test_spe.stdout.exp
+++ b/memcheck/tests/ppc32/test_spe.stdout.exp
@@ -77,6 +77,7 @@ SPE Regression Tests: PASS
 ....evsrwis: PASS
 ..SPE2PIM Tests: PASS
 ...Chapter 2: High-Level Language Interface: PASS
+...Chapter 5: Programming Interface Examples: PASS
 ..SPE ISA Miscellaneous Tests: PASS
 ...Memory transfer using evldd-evstdd: PASS
 ...Value pool demo: PASS
diff --git a/regtest-power7-64.log b/regtest-power7-64.log
index 3a1e6fb..d8cbf5d 100644
--- a/regtest-power7-64.log
+++ b/regtest-power7-64.log
@@ -1980,7 +1980,7 @@ badfree-2trace:  valgrind   --num-callers=2 -q ./badfree
 badfree:         valgrind   -q ./badfree 
 badfree3:        valgrind   -q --fullpath-after=/proj/ppc/DT/labhome/anmol/valgrind-3.8.1/ ./badfree 
 badjump:         valgrind   ./badjump 
-sh: line 1: 26758 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
+sh: line 1:  4143 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck ./badjump > badjump.stdout.out 2> badjump.stderr.out
 badjump2:        valgrind   -q ./badjump2 
 badloop:         valgrind   -q ./badloop 
 badpoll:         valgrind   -q ./badpoll 
@@ -1997,7 +1997,7 @@ clo_redzone_default: valgrind   --leak-check=no -q ./clo_redzone
 custom-overlap:  valgrind   --leak-check=summary -q ./custom-overlap 
 custom_alloc:    valgrind   -q ./custom_alloc 
 deep-backtrace:  valgrind   -q --num-callers=500 ./deep-backtrace 
-sh: line 1: 27317 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
+sh: line 1:  4703 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --num-callers=500 ./deep-backtrace > deep-backtrace.stdout.out 2> deep-backtrace.stderr.out
 deep_templates:  valgrind   -q ./deep_templates 
 describe-block:  valgrind   ./describe-block 
 doublefree:      valgrind   -q ./doublefree 
@@ -2110,7 +2110,7 @@ supp-dir:        valgrind   --suppressions=x86/ ./../../tests/true
 supp1:           valgrind   --suppressions=supp.supp -q ./supp1 
 supp2:           valgrind   --suppressions=supp.supp -q ./supp2 
 supp_unknown:    valgrind   -q --suppressions=supp_unknown.supp ./badjump 
-sh: line 1: 32006 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
+sh: line 1:  9413 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=memcheck -q --suppressions=supp_unknown.supp ./badjump > supp_unknown.stdout.out 2> supp_unknown.stderr.out
 *** supp_unknown failed (stderr) ***
 suppfree:        valgrind   --suppressions=suppfree.supp -q ./suppfree 
 test-plo-no:     valgrind   -q ./test-plo 
@@ -2246,7 +2246,7 @@ gxx304:          valgrind   ./gxx304
 ifunc:           (skipping, prereq failed: test -e ifunc)
 -- Running  tests in none/tests/linux ----------------------------------
 blockfault:      valgrind   ./blockfault 
-sh: line 1:  4165 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
+sh: line 1: 13932 Segmentation fault      (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=none ./blockfault > blockfault.stdout.out 2> blockfault.stderr.out
 mremap:          valgrind   ./mremap 
 mremap2:         valgrind   ./mremap2 
 mremap3:         valgrind   ./mremap3 
@@ -2412,7 +2412,7 @@ tc20_verifywrap: valgrind   --read-var-info=yes ./tc20_verifywrap
 *** tc20_verifywrap failed (stderr) ***
 tc21_pthonce:    valgrind   --read-var-info=yes ./tc21_pthonce 
 tc22_exit_w_lock: valgrind   ./tc22_exit_w_lock 
-sh: line 1: 21657 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1: 31352 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=helgrind ./tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   ./tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --hg-sanity-flags=111111 ./tc24_nonzero_sem 
 -- Finished tests in helgrind/tests ------------------------------------
@@ -2531,7 +2531,7 @@ tc18_semabuse:   valgrind   ./../../helgrind/tests/tc18_semabuse
 tc19_shadowmem:  valgrind   --error-limit=no --read-var-info=yes --show-confl-seg=no --num-callers=3 ./../../helgrind/tests/tc19_shadowmem 
 tc21_pthonce:    valgrind   --num-callers=3 ./../../helgrind/tests/tc21_pthonce 
 tc22_exit_w_lock: valgrind   --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock 
-sh: line 1: 27000 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
+sh: line 1:  4389 Aborted                 (core dumped) VALGRIND_LIB=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place VALGRIND_LIB_INNER=/proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/.in_place /proj/.ppc_DT_labhome/labhome/anmol/valgrind-3.8.1/./coregrind/valgrind --command-line-only=yes --memcheck:leak-check=no --tool=drd --num-callers=3 ./../../helgrind/tests/tc22_exit_w_lock > tc22_exit_w_lock.stdout.out 2> tc22_exit_w_lock.stderr.out
 tc23_bogus_condwait: valgrind   --num-callers=3 ./../../helgrind/tests/tc23_bogus_condwait 
 tc24_nonzero_sem: valgrind   --read-var-info=yes ./../../helgrind/tests/tc24_nonzero_sem 
 thread_name:     valgrind   --read-var-info=yes --check-stack-var=yes --num-callers=3 ./thread_name 
-- 
1.7.3.4

